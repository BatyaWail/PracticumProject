// <auto-generated />
using System;
using EmployeeSrever.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeSrever.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeServer.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaleOrFmale")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            Identity = "123456789",
                            LastName = "Doe",
                            MaleOrFmale = true,
                            StartDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(3893),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            Identity = "987654321",
                            LastName = "Smith",
                            MaleOrFmale = false,
                            StartDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(3964),
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1985, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alice",
                            Identity = "456789123",
                            LastName = "Johnson",
                            MaleOrFmale = true,
                            StartDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(3970),
                            Status = false
                        });
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsManagementRole")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            RoleId = 1,
                            EntryDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(4018),
                            IsManagementRole = true
                        },
                        new
                        {
                            EmployeeId = 2,
                            RoleId = 2,
                            EntryDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(4024),
                            IsManagementRole = false
                        },
                        new
                        {
                            EmployeeId = 3,
                            RoleId = 3,
                            EntryDate = new DateTime(2024, 4, 7, 0, 11, 19, 147, DateTimeKind.Local).AddTicks(4027),
                            IsManagementRole = false
                        });
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Developer"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Designer"
                        });
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "password1",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "password2",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 3,
                            Password = "password3",
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.EmployeeRole", b =>
                {
                    b.HasOne("EmployeeServer.Core.Entities.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeServer.Core.Entities.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("EmployeeServer.Core.Entities.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
